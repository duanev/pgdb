
pcie.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <pci_scan>:
}


int
pci_scan(void)
{
   0:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
   4:	910003fd 	mov	x29, sp
   8:	a90153f3 	stp	x19, x20, [sp, #16]
   c:	a9025bf5 	stp	x21, x22, [sp, #32]
  10:	a90363f7 	stp	x23, x24, [sp, #48]
  14:	f90023f9 	str	x25, [sp, #64]
    struct pci_confspace * conf;

    for (u64 i = PCIE_CONF_ADDR; i < PCIE_CONF_END; i += PCIE_CONF_SIZE) {
  18:	d2a20014 	mov	x20, #0x10000000            	// #268435456
  1c:	f2c00814 	movk	x20, #0x40, lsl #32
        conf = (void *)i;

        if (conf->vendorId  &&  conf->vendorId != 0xffff) {
            printf("  %x %x %x\n", i, conf->vendorId, conf->deviceId);
  20:	90000017 	adrp	x23, 0 <pci_scan>
  24:	910002f7 	add	x23, x23, #0x0
            if (conf->capPtr) {
                struct pci_capability * cap = (void *)i + conf->capPtr;
                for (; cap->next; cap = (void *)i + cap->next) {
                    printf("        %x cap", cap);
                    if (cap->expCap)  printf(" exp(%x)", cap->expCap);
                    if (cap->devCap)  printf(" dev(%x,%x)", cap->devCap, cap->devStatus);
  28:	90000018 	adrp	x24, 0 <pci_scan>
  2c:	91000318 	add	x24, x24, #0x0
  30:	1400001d 	b	a4 <pci_scan+0xa4>
                    printf("    %x bar%d class(%x,%x) prg(%x) size(%x)\n", conf->bar + j, j,
  34:	cb0603e6 	neg	x6, x6
  38:	394026a5 	ldrb	w5, [x21, #9]
  3c:	39402aa4 	ldrb	w4, [x21, #10]
  40:	39402ea3 	ldrb	w3, [x21, #11]
  44:	2a1303e2 	mov	w2, w19
  48:	8b33cb21 	add	x1, x25, w19, sxtw #2
  4c:	aa1603e0 	mov	x0, x22
  50:	94000000 	bl	0 <printf>
            for (int j = 0; j < 6; j++) {
  54:	11000673 	add	w19, w19, #0x1
  58:	7100167f 	cmp	w19, #0x5
  5c:	5400016c 	b.gt	88 <pci_scan+0x88>
                if (conf->bar[j]) {
  60:	8b33caa1 	add	x1, x21, w19, sxtw #2
  64:	b9401020 	ldr	w0, [x1, #16]
  68:	34ffff60 	cbz	w0, 54 <pci_scan+0x54>
                    u64 siz = 0xffffffff00000000ull | (conf->bar[j] & 0xfffffff0);
  6c:	927c6c06 	and	x6, x0, #0xfffffff0
  70:	b2607cc6 	orr	x6, x6, #0xffffffff00000000
                    if (conf->bar[j] & PCI_CONF_BAR_64BIT)
  74:	3617fe00 	tbz	w0, #2, 34 <pci_scan+0x34>
                        siz |= ((u64)conf->bar[++j] << 32);
  78:	11000673 	add	w19, w19, #0x1
  7c:	b9401420 	ldr	w0, [x1, #20]
  80:	aa0080c6 	orr	x6, x6, x0, lsl #32
  84:	17ffffec 	b	34 <pci_scan+0x34>
            if (conf->capPtr) {
  88:	3940d2b3 	ldrb	w19, [x21, #52]
  8c:	350003b3 	cbnz	w19, 100 <pci_scan+0x100>
    for (u64 i = PCIE_CONF_ADDR; i < PCIE_CONF_END; i += PCIE_CONF_SIZE) {
  90:	91402294 	add	x20, x20, #0x8, lsl #12
  94:	d2a40000 	mov	x0, #0x20000000            	// #536870912
  98:	f2c00800 	movk	x0, #0x40, lsl #32
  9c:	eb00029f 	cmp	x20, x0
  a0:	54000860 	b.eq	1ac <pci_scan+0x1ac>  // b.none
        conf = (void *)i;
  a4:	aa1403f5 	mov	x21, x20
        if (conf->vendorId  &&  conf->vendorId != 0xffff) {
  a8:	79400282 	ldrh	w2, [x20]
  ac:	51000441 	sub	w1, w2, #0x1
  b0:	529fffa0 	mov	w0, #0xfffd                	// #65533
  b4:	6b21201f 	cmp	w0, w1, uxth
  b8:	54fffec3 	b.cc	90 <pci_scan+0x90>  // b.lo, b.ul, b.last
            printf("  %x %x %x\n", i, conf->vendorId, conf->deviceId);
  bc:	79400683 	ldrh	w3, [x20, #2]
  c0:	aa1403e1 	mov	x1, x20
  c4:	aa1703e0 	mov	x0, x23
  c8:	94000000 	bl	0 <printf>
                conf->bar[j] = 0xffffffff;
  cc:	12800000 	mov	w0, #0xffffffff            	// #-1
  d0:	b9001280 	str	w0, [x20, #16]
  d4:	b9001680 	str	w0, [x20, #20]
  d8:	b9001a80 	str	w0, [x20, #24]
  dc:	b9001e80 	str	w0, [x20, #28]
  e0:	b9002280 	str	w0, [x20, #32]
  e4:	b9002680 	str	w0, [x20, #36]
            dc_invalidate((u64)conf->bar);
  e8:	91004299 	add	x25, x20, #0x10
    __asm__ __volatile__("dc civac, %0\n\t" : : "r" (va) : "memory");
  ec:	d50b7e39 	dc	civac, x25
            for (int j = 0; j < 6; j++) {
  f0:	52800013 	mov	w19, #0x0                   	// #0
                    printf("    %x bar%d class(%x,%x) prg(%x) size(%x)\n", conf->bar + j, j,
  f4:	90000016 	adrp	x22, 0 <pci_scan>
  f8:	910002d6 	add	x22, x22, #0x0
  fc:	17ffffd9 	b	60 <pci_scan+0x60>
                struct pci_capability * cap = (void *)i + conf->capPtr;
 100:	8b330293 	add	x19, x20, w19, uxtb
                for (; cap->next; cap = (void *)i + cap->next) {
 104:	39400660 	ldrb	w0, [x19, #1]
 108:	34fffc40 	cbz	w0, 90 <pci_scan+0x90>
                    printf("        %x cap", cap);
 10c:	90000015 	adrp	x21, 0 <pci_scan>
 110:	910002b5 	add	x21, x21, #0x0
                    if (cap->expCap)  printf(" exp(%x)", cap->expCap);
 114:	90000016 	adrp	x22, 0 <pci_scan>
 118:	910002d6 	add	x22, x22, #0x0
 11c:	14000018 	b	17c <pci_scan+0x17c>
 120:	aa1603e0 	mov	x0, x22
 124:	94000000 	bl	0 <printf>
 128:	1400001a 	b	190 <pci_scan+0x190>
                    if (cap->devCap)  printf(" dev(%x,%x)", cap->devCap, cap->devStatus);
 12c:	79401662 	ldrh	w2, [x19, #10]
 130:	aa1803e0 	mov	x0, x24
 134:	94000000 	bl	0 <printf>
 138:	14000018 	b	198 <pci_scan+0x198>
                    if (cap->linkCap) printf(" link(%x,%x)", cap->linkCap, cap->linkStatus);
 13c:	79402662 	ldrh	w2, [x19, #18]
 140:	90000000 	adrp	x0, 0 <pci_scan>
 144:	91000000 	add	x0, x0, #0x0
 148:	94000000 	bl	0 <printf>
 14c:	14000015 	b	1a0 <pci_scan+0x1a0>
                    if (cap->slotCap) printf(" slot(%x,%x)", cap->slotCap, cap->slotStatus);
 150:	79403662 	ldrh	w2, [x19, #26]
 154:	90000000 	adrp	x0, 0 <pci_scan>
 158:	91000000 	add	x0, x0, #0x0
 15c:	94000000 	bl	0 <printf>
                    con_puts("\n");         // gcc uses putchar for printf("\n")
 160:	90000000 	adrp	x0, 0 <pci_scan>
 164:	91000000 	add	x0, x0, #0x0
 168:	94000000 	bl	0 <con_puts>
                for (; cap->next; cap = (void *)i + cap->next) {
 16c:	39400673 	ldrb	w19, [x19, #1]
 170:	8b140273 	add	x19, x19, x20
 174:	39400660 	ldrb	w0, [x19, #1]
 178:	34fff8c0 	cbz	w0, 90 <pci_scan+0x90>
                    printf("        %x cap", cap);
 17c:	aa1303e1 	mov	x1, x19
 180:	aa1503e0 	mov	x0, x21
 184:	94000000 	bl	0 <printf>
                    if (cap->expCap)  printf(" exp(%x)", cap->expCap);
 188:	79400661 	ldrh	w1, [x19, #2]
 18c:	35fffca1 	cbnz	w1, 120 <pci_scan+0x120>
                    if (cap->devCap)  printf(" dev(%x,%x)", cap->devCap, cap->devStatus);
 190:	b9400661 	ldr	w1, [x19, #4]
 194:	35fffcc1 	cbnz	w1, 12c <pci_scan+0x12c>
                    if (cap->linkCap) printf(" link(%x,%x)", cap->linkCap, cap->linkStatus);
 198:	b9400e61 	ldr	w1, [x19, #12]
 19c:	35fffd01 	cbnz	w1, 13c <pci_scan+0x13c>
                    if (cap->slotCap) printf(" slot(%x,%x)", cap->slotCap, cap->slotStatus);
 1a0:	b9401661 	ldr	w1, [x19, #20]
 1a4:	34fffde1 	cbz	w1, 160 <pci_scan+0x160>
 1a8:	17ffffea 	b	150 <pci_scan+0x150>
                }
            }
        }
    }
}
 1ac:	a94153f3 	ldp	x19, x20, [sp, #16]
 1b0:	a9425bf5 	ldp	x21, x22, [sp, #32]
 1b4:	a94363f7 	ldp	x23, x24, [sp, #48]
 1b8:	f94023f9 	ldr	x25, [sp, #64]
 1bc:	a8c57bfd 	ldp	x29, x30, [sp], #80
 1c0:	d65f03c0 	ret

00000000000001c4 <main>:


void
main(int ac, char * av[])
{
 1c4:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
 1c8:	910003fd 	mov	x29, sp
 1cc:	a90153f3 	stp	x19, x20, [sp, #16]
    char c;
    do {
        pci_scan();
        c = con_getc();
        printf("-------- %c\n", c);
 1d0:	90000014 	adrp	x20, 0 <pci_scan>
 1d4:	91000294 	add	x20, x20, #0x0
        pci_scan();
 1d8:	94000000 	bl	0 <pci_scan>
        c = con_getc();
 1dc:	94000000 	bl	0 <con_getc>
 1e0:	12001c13 	and	w19, w0, #0xff
        printf("-------- %c\n", c);
 1e4:	2a1303e1 	mov	w1, w19
 1e8:	aa1403e0 	mov	x0, x20
 1ec:	94000000 	bl	0 <printf>
    } while (c != 'q');
 1f0:	7101c67f 	cmp	w19, #0x71
 1f4:	54ffff21 	b.ne	1d8 <main+0x14>  // b.any
}
 1f8:	a94153f3 	ldp	x19, x20, [sp, #16]
 1fc:	a8c27bfd 	ldp	x29, x30, [sp], #32
 200:	d65f03c0 	ret
